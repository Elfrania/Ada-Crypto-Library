with Test.Big_Number_Multiplication;
with Test.Big_Number_Mult2;
with Test.Big_Number_Mod_Type_Comp_and_Add;
with Test.Big_Number_Mod_Types;
with Test.Big_Number_Comp;
with Test.Big_Number_Add;
with Test.Big_Number_Sub;
with Test.Big_Number_Div;
with Test.Big_Number_XOR;
with Test.Big_Number_OR;
with Test.Big_Number_AND;
with Test.Big_Number_Exponentiate;
with Test.Big_Number_Mod;
with Test.Big_Number_Min_Max;
with Test.Big_Numbers_Utils;
with Test.Big_Number_Inc;
with Test.Big_Number_Dec;
with Test.Big_Number_IsEven;
with Test.Big_Number_IsOdd;
with Test.Big_Number_LSB;
with Test.Big_Number_MSB;
with Test.Big_Number_SR;
with Test.Big_Number_SL;
with Test.Big_Number_RL;
with Test.Big_Number_Swap;
with Test.Big_Number_Add_Mod_Utils;
with Test.Big_Number_Sub_Mod_Utils;
with Test.Big_Number_Mult_Mod_Utils;
with Test.Big_Number_Inv_Mod_Utils;
with Test.Big_Number_Div_Mod_Utils;
with Test.Big_Number_Pow_Mod_Utils;
with Test.Big_Number_Rand_Mod_Utils;
with Test.Big_Number_Prime_Mod_Utils;
with Test.Big_Number_LPrime_Mod_Utils;
with Test.Big_Number_MR_Mod_Utils;
with Test.Big_Number_B_Add;
with Test.Big_Number_B_Sub;
with Test.Big_Number_B_Mult;
with Test.Big_Number_B_Div;


package body Test.Suite_Big_Num  is
   Result	 		: aliased Test_Suite;
   Test_Mult 			: aliased Test.Big_Number_Multiplication.Big_Number_Test;
   Test_Mult2	 	   	: aliased Test.Big_Number_Mult2.Big_Number_Test;
   Test_Mod_Type_Comp_and_Add	: aliased Test.Big_Number_Mod_Type_Comp_and_Add.Big_Number_Test;
   Test_Mod_Types		: aliased Test.Big_Number_Mod_Types.Big_Number_Test;
   Test_Comp 			: aliased Test.Big_Number_Comp.Big_Number_Test;
   Test_Add 			: aliased Test.Big_Number_Add.Big_Number_Test;
   Test_Sub 			: aliased Test.Big_Number_Sub.Big_Number_Test;
   Test_Div 			: aliased Test.Big_Number_Div.Big_Number_Test;
   Test_XOR 			: aliased Test.Big_Number_XOR.Big_Number_Test;
   Test_OR 			: aliased Test.Big_Number_OR.Big_Number_Test;
   Test_AND 			: aliased Test.Big_Number_AND.Big_Number_Test;
   Test_Exponentiate 		: aliased Test.Big_Number_Exponentiate.Big_Number_Test;
   Test_Mod			: aliased Test.Big_Number_Mod.Big_Number_Test;
   Test_Min_Max	        	: aliased Test.Big_Number_Min_Max.Big_Number_Test;
   Test_Utils			: aliased Test.Big_Numbers_Utils.Big_Number_Test;
   Test_Increase		: aliased Test.Big_Number_Inc.Big_Number_Test;
   Test_Decrease		: aliased Test.Big_Number_Dec.Big_Number_Test;
   Test_Is_Even			: aliased Test.Big_Number_IsEven.Big_Number_Test;
   Test_Is_Odd			: aliased Test.Big_Number_IsOdd.Big_Number_Test;
   Test_Least_Significant_Bit	: aliased Test.Big_Number_LSB.Big_Number_Test;
   Test_Most_Significant_Bit	: aliased Test.Big_Number_MSB.Big_Number_Test;
   Test_Shift_Right		: aliased Test.Big_Number_SR.Big_Number_Test;
   Test_Shift_Left	        : aliased Test.Big_Number_SL.Big_Number_Test;
   Test_Rotate_Left		: aliased Test.Big_Number_RL.Big_Number_Test;
   Test_Swap			: aliased Test.Big_Number_Swap.Big_Number_Test;
   Test_Add_Mod_Utils		: aliased Test.Big_Number_Add_Mod_Utils.Big_Number_Test;
   Test_Sub_Mod_Utils		: aliased Test.Big_Number_Sub_Mod_Utils.Big_Number_Test;
   Test_Mult_Mod_Utils		: aliased Test.Big_Number_Mult_Mod_Utils.Big_Number_Test;
   Test_Inv_Mod_Utils		: aliased Test.Big_Number_Inv_Mod_Utils.Big_Number_Test;
   Test_Div_Mod_Utils		: aliased Test.Big_Number_Div_Mod_Utils.Big_Number_Test;
   Test_Pow_Mod_Utils		: aliased Test.Big_Number_Pow_Mod_Utils.Big_Number_Test;
   Test_Rand_Mod_Utils		: aliased Test.Big_Number_Rand_Mod_Utils.Big_Number_Test;
   Test_Prime_Mod_Utils		: aliased Test.Big_Number_Prime_Mod_Utils.Big_Number_Test;
   Test_LPrime_Mod_Utils	: aliased Test.Big_Number_LPrime_Mod_Utils.Big_Number_Test;
   Test_MR_Mod_Utils		: aliased Test.Big_Number_MR_Mod_Utils.Big_Number_Test;
   Test_B_Add			: aliased Test.Big_Number_B_Add.Big_Number_Test;
   Test_B_Sub			: aliased Test.Big_Number_B_Sub.Big_Number_Test;
   Test_B_Mult			: aliased Test.Big_Number_B_Mult.Big_Number_Test;
   Test_B_Div			: aliased Test.Big_Number_B_Div.Big_Number_Test;

   function Suite return Access_Test_Suite is
   begin
      Add_Test(Result'Access, Test_Mult'Access);
      Add_Test(Result'Access, Test_Mult2'Access);
      Add_Test(Result'Access, Test_Mod_Type_Comp_and_Add'Access);
      Add_Test(Result'Access, Test_Mod_Types'Access);
      Add_Test(Result'Access, Test_Comp'Access);
      Add_Test(Result'Access, Test_Add'Access);
      Add_Test(Result'Access, Test_Sub'Access);
      Add_Test(Result'Access, Test_Div'Access);
      Add_Test(Result'Access, Test_XOR'Access);
      Add_Test(Result'Access, Test_OR'Access);
      Add_Test(Result'Access, Test_AND'Access);
      Add_Test(Result'Access, Test_Exponentiate'Access);
      Add_Test(Result'Access, Test_Mod'Access);
      Add_Test(Result'Access, Test_Min_Max'Access);
      Add_Test(Result'Access, Test_Utils'Access);
      Add_Test(Result'Access, Test_Increase'Access);
      Add_Test(Result'Access, Test_Decrease'Access);
      Add_Test(Result'Access, Test_Is_Even'Access);
      Add_Test(Result'Access, Test_Is_Odd'Access);
      Add_Test(Result'Access, Test_Least_Significant_Bit'Access);
      Add_Test(Result'Access, Test_Most_Significant_Bit'Access);
      Add_Test(Result'Access, Test_Shift_Right'Access);
      Add_Test(Result'Access, Test_Shift_Left'Access);
      Add_Test(Result'Access, Test_Rotate_Left'Access);
      Add_Test(Result'Access, Test_Swap'Access);
      Add_Test(Result'Access, Test_Add_Mod_Utils'Access);
      Add_Test(Result'Access, Test_Sub_Mod_Utils'Access);
      Add_Test(Result'Access, Test_Mult_Mod_Utils'Access);
      Add_Test(Result'Access, Test_Inv_Mod_Utils'Access);
      Add_Test(Result'Access, Test_Div_Mod_Utils'Access);
      Add_Test(Result'Access, Test_Pow_Mod_Utils'Access);
      Add_Test(Result'Access, Test_Rand_Mod_Utils'Access);
      Add_Test(Result'Access, Test_Prime_Mod_Utils'Access);
      Add_Test(Result'Access, Test_LPrime_Mod_Utils'Access);
      Add_Test(Result'Access, Test_MR_Mod_Utils'Access);
      Add_Test(Result'Access, Test_B_Add'Access);
      Add_Test(Result'Access, Test_B_Sub'Access);
      Add_Test(Result'Access, Test_B_Mult'Access);
      Add_Test(Result'Access, Test_B_Div'Access);
      return Result'Access;
   end Suite;

end Test.Suite_Big_Num;
